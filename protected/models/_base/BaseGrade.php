<?php

/**
 * This is the model base class for the table "grade".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Grade".
 *
 * Columns in table "grade" available as properties of the model,
 * followed by relations of table "grade" available as properties of the model.
 *
 * @property string $id
 * @property string $name
 * @property string $gradedate
 * @property string $gradeletter
 * @property string $gradepercent
 * @property string $gradeable
 *
 * @property Assignment[] $assignments
 */
abstract class BaseGrade extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'grade';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Grade|Grades', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('name', 'required'),
			array('name', 'length', 'max'=>100),
			array('gradeletter', 'length', 'max'=>45),
			array('gradepercent', 'length', 'max'=>5),
			array('gradeable', 'length', 'max'=>3),
			array('gradedate', 'safe'),
			array('gradedate, gradeletter, gradepercent, gradeable', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, name, gradedate, gradeletter, gradepercent, gradeable', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'assignments' => array(self::MANY_MANY, 'Assignment', 'grade_assignment(grade_id, assignment_id)'),
		);
	}

	public function pivotModels() {
		return array(
			'assignments' => 'GradeAssignment',
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name' => Yii::t('app', 'Name'),
			'gradedate' => Yii::t('app', 'Gradedate'),
			'gradeletter' => Yii::t('app', 'Gradeletter'),
			'gradepercent' => Yii::t('app', 'Gradepercent'),
			'gradeable' => Yii::t('app', 'Gradeable'),
			'assignments' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('gradedate', $this->gradedate, true);
		$criteria->compare('gradeletter', $this->gradeletter, true);
		$criteria->compare('gradepercent', $this->gradepercent, true);
		$criteria->compare('gradeable', $this->gradeable, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}