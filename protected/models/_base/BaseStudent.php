<?php

/**
 * This is the model base class for the table "student".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Student".
 *
 * Columns in table "student" available as properties of the model,
 * followed by relations of table "student" available as properties of the model.
 *
 * @property string $id
 * @property string $name
 * @property string $email
 * @property string $phone
 * @property string $dob
 * @property string $gradelevel
 *
 * @property Assignment[] $assignments
 * @property Classroom[] $classrooms
 */
abstract class BaseStudent extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'student';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Student|Students', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('name', 'required'),
			array('name', 'length', 'max'=>100),
			array('email, phone', 'length', 'max'=>45),
			array('gradelevel', 'length', 'max'=>3),
			array('dob', 'safe'),
			array('email, phone, dob, gradelevel', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, name, email, phone, dob, gradelevel', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'assignments' => array(self::MANY_MANY, 'Assignment', 'assignment_student(student_id, assignment_id)'),
			'classrooms' => array(self::MANY_MANY, 'Classroom', 'student_classroom(student_id, classroom_id)'),
		);
	}

	public function pivotModels() {
		return array(
			'assignments' => 'AssignmentStudent',
			'classrooms' => 'StudentClassroom',
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name' => Yii::t('app', 'Name'),
			'email' => Yii::t('app', 'Email'),
			'phone' => Yii::t('app', 'Phone'),
			'dob' => Yii::t('app', 'Dob'),
			'gradelevel' => Yii::t('app', 'Gradelevel'),
			'assignments' => null,
			'classrooms' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('phone', $this->phone, true);
		$criteria->compare('dob', $this->dob, true);
		$criteria->compare('gradelevel', $this->gradelevel, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}